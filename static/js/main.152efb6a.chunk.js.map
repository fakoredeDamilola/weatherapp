{"version":3,"sources":["context.js","components/layout/Input.js","components/layout/City.js","components/layout/Header.js","components/layout/Footer.js","components/weather/Weather.js","components/weather/Cloud.js","components/weather/Weekly.js","components/weather/Body.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","getData","data","list","d","Date","current_day","getDate","current_date","getFullYear","getMonth","setDate","arr_date","day","next_date","ini_value","dt_txt","split","today_arr","i","length","push","reducer","state","action","type","today_weather","payload","city","input","error","Provider","weather","info","presentDate","dispatch","setState","navigator","geolocation","getCurrentPosition","position","coords","this","fetch","then","json","body","value","props","children","Component","Consumer","Input","onChange","e","target","name","submitWeather","a","className","onClick","bind","aria-hidden","City","country","population","Header","style","cursor","defaultProps","brand","Footer","href","Weather","main","grnd_level","sea_level","Cloud","clouds","all","description","Weekly","temp","toFixed","Body","wind","alert","humidity","speed","map","index","key","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.152efb6a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nconst Context = React.createContext();\r\nconst getData = (data) => {\r\n  if (data.list) {\r\n    let d = new Date();\r\n    let current_day = d.getDate() < 9 ? `0${d.getDate()}` : d.getDate();\r\n    let current_date = `${d.getFullYear()}-0${d.getMonth() + 1}-${current_day}`;\r\n\r\n    // Wed Feb 29 2012 11:00:00 GMT+1100 (EST)\r\n\r\n    d.setDate(d.getDate() + 1);\r\n    let day = d.getDate() < 9 ? `0${d.getDate()}` : d.getDate();\r\n    let next_date = `${d.getFullYear()}-0${d.getMonth() + 1}-${day}`;\r\n    let list = [...data.list];\r\n    let date_value,\r\n      arr_date,\r\n      ini_value = list[0].dt_txt.split(\" \")[0],\r\n      today_arr = [];\r\n    for (let i = 0; i < list.length - 1; i++) {\r\n      date_value = list[i].dt_txt;\r\n      arr_date = date_value.split(\" \")[0];\r\n      if (ini_value === current_date) {\r\n        if (current_date == arr_date) {\r\n          today_arr.push(list[i]);\r\n        }\r\n      } else if (ini_value === next_date) {\r\n        if (next_date == arr_date) {\r\n          today_arr.push(list[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return today_arr;\r\n  }\r\n};\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INSERT_DATA\":\r\n      return {\r\n        ...state,\r\n        today_weather: action.payload,\r\n      };\r\n    case \"INSERT_INFO\":\r\n      let data = getData(action.payload);\r\n      return {\r\n        ...state,\r\n        today_weather: getData(action.payload),\r\n      };\r\n    case \"INSERT_CITY\":\r\n      return {\r\n        ...state,\r\n        city: action.payload,\r\n      };\r\n      break;\r\n    case \"INPUT\":\r\n      return {\r\n        ...state,\r\n        input: action.payload,\r\n      };\r\n      break;\r\n    case \"ERROR\":\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport class Provider extends Component {\r\n  state = {\r\n    weather: [],\r\n    city: {},\r\n    day: \"\",\r\n    input: \"\",\r\n    error: false,\r\n    today_weather: [],\r\n    info: {},\r\n    presentDate: new Date(),\r\n    dispatch: (action) => {\r\n      this.setState((state) => reducer(state, action));\r\n    },\r\n  };\r\n  componentDidMount() {\r\n    if (navigator.geolocation) {\r\n      let data = navigator.geolocation.getCurrentPosition(showPosition);\r\n    } else {\r\n      this.setState({\r\n        info:\r\n          \"Geolocation is not allowed in this browser, we will give you the weather forecast of USA\",\r\n      });\r\n    }\r\n\r\n    function showPosition(position) {\r\n      return position.coords;\r\n    }\r\n    fetch(\r\n      `https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/forecast?q=Nigeria&appid=5325b6c2788ed813eaf37fdcce42d21e`\r\n    )\r\n      .then((data) => data.json())\r\n      .then((body) => {\r\n        if (body) {\r\n          this.setState({ city: body.city });\r\n          let data = getData(body);\r\n          this.setState({ today_weather: data });\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Context.Provider value={this.state}>\r\n          {this.props.children}\r\n        </Context.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nclass Input extends Component {\r\n  state = {\r\n    input: \"\",\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitWeather = async (dispatch) => {\r\n    let data;\r\n    await fetch(\r\n      `https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/forecast?q=${this.state.input}&appid=5325b6c2788ed813eaf37fdcce42d21e`\r\n    )\r\n      .then((data) => data.json())\r\n      .then((body) => {\r\n        data = body;\r\n      });\r\n    dispatch({ type: \"INSERT_INFO\", payload: data });\r\n    dispatch({ type: \"INSERT_CITY\", payload: data.city });\r\n  };\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { input, dispatch } = value;\r\n          return (\r\n            <div className=\"buttonwrapper\">\r\n              <input\r\n                type=\"text\"\r\n                onChange={this.onChange}\r\n                name=\"input\"\r\n                value={this.state.input}\r\n              />\r\n\r\n              <button onClick={this.submitWeather.bind(this, dispatch)}>\r\n                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n              </button>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nclass City extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { city } = value;\r\n          if (city) {\r\n            return (\r\n              <div className=\"header-2-content\">\r\n                <div className=\"city_name\">\r\n                  {city.name} | {city.country}\r\n                </div>\r\n                <div className=\"city_population\">\r\n                  population: {city.population}\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default City;\r\n","import React, { useState } from \"react\";\r\nimport Input from \"./Input\";\r\n\r\nimport City from \"./City\";\r\nconst Header = (props) => {\r\n  return (\r\n    <div className=\"header-background\">\r\n      <div className=\"header-inner-div\">\r\n        <div className=\"header-1\">\r\n          <div className=\"logo-div\" style={{ cursor: \"pointer\" }}>\r\n            <i className=\"fa fa-bolt\" aria-hidden=\"true\"></i>{\" \"}\r\n            {/* <span style={{ marginLeft: \"10px\" }}>{props.brand}</span> */}\r\n          </div>\r\n\r\n          <div className=\"header-search\">\r\n            <div className=\"input-block\">\r\n              <Input />\r\n            </div>\r\n            <div className=\"input-logo\">search</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"header-sub-heading\">\r\n          <div className=\"header-2\">\r\n            <City />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nHeader.defaultProps = {\r\n  brand: \"WEATHER FORECAST\",\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"page-footer font-small mt-5\">\r\n      <div className=\"container\">\r\n        <div className=\"row  text-white text-center\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"my-3 flex-center\">\r\n              <a className=\"fb-ic\" href=\"https://web.facebook.com/dfakorede29\">\r\n                <i className=\"fab fa-facebook-f fa-lg white-text mr-4\"> </i>\r\n              </a>\r\n\r\n              <a className=\"tw-ic\" href=\"https://www.twitter.com/@fakoredeDami\">\r\n                <i className=\"fab fa-twitter fa-lg white-text mr-4\"> </i>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"footer-copyright text-center py-3\">\r\n        © 2020 Copyright :<a href=\"#\"> Fakorede Damilola</a>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nclass Weather extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { today_weather, info } = value;\r\n          if (today_weather[0]) {\r\n            return (\r\n              <div>\r\n                <div className=\"extended_forecast_div\">\r\n                  <div className=\"extended_forecast_name\">Pressure</div>\r\n                  <div className=\"main_pressure box\">\r\n                    {\" \"}\r\n                    <p> Atmospheric pressure on the ground level, hPa</p>\r\n                    {/* on the sea level by default, hPa */}\r\n                    <div className=\"main_pressure_value box_value\">\r\n                      <p>\r\n                        {today_weather[0].main.grnd_level}\r\n                        <span>hpa</span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"main_sea_level box\">\r\n                    Atmospheric pressure on the sea level, hPa\r\n                    <div className=\"main_pressure_value box_value\">\r\n                      <p>\r\n                        {today_weather[0].main.sea_level}\r\n                        <span>hpa</span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Weather;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nclass Cloud extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { today_weather, info } = value;\r\n          if (today_weather[0]) {\r\n            return (\r\n              <div>\r\n                <div className=\"extended_forecast_div\">\r\n                  <div className=\"extended_forecast_name\">cloud</div>\r\n                  <div className=\"main_ground_level box\">\r\n                    Cloudiness\r\n                    <div className=\"main_pressure_value box_value\">\r\n                      <p>\r\n                        {today_weather[0].clouds.all}\r\n                        <span>%</span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"extended_forecast_name\">Weather</div>\r\n                  <div className=\"weather_cover\">\r\n                    <div className=\"main_pressure box\">\r\n                      Main\r\n                      <div className=\"main_pressure_value box_value\">\r\n                        <p> {today_weather[0].weather[0].main}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"main_pressure box\">\r\n                      Description\r\n                      <div className=\"main_pressure_value box_value\">\r\n                        {\" \"}\r\n                        <p> {today_weather[0].weather[0].description}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Cloud;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Weekly extends Component {\r\n  render() {\r\n    let { value } = this.props;\r\n\r\n    return (\r\n      <li>\r\n        {value.dt_txt.split(\" \")[1]}\r\n        {/* <div>The girl</div> */}\r\n        <div>{(value.main.temp - 273).toFixed(2)} ℃</div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\nexport default Weekly;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport Weather from \"./Weather\";\r\nimport Cloud from \"./Cloud\";\r\nimport Weekly from \"./Weekly\";\r\nclass Body extends Component {\r\n  state = {\r\n    main: {},\r\n    weather: [],\r\n    wind: {},\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { today_weather, info, city, error } = value;\r\n\r\n          if (today_weather[0]) {\r\n            return (\r\n              <div className=\"wrapper\">\r\n                <div className=\"main\">\r\n                  {error\r\n                    ? alert(\"The country is not available, try another one\")\r\n                    : null}\r\n                  <div>\r\n                    <div className=\"main_temp\">\r\n                      <div className=\"main_sub_temp\">\r\n                        <div className=\"main_temp_value\">\r\n                          <div className=\"main_temp_value_heading\">\r\n                            <h1>\r\n                              {(today_weather[0].main.temp - 273).toFixed(2)} ℃\r\n                            </h1>\r\n                            <p>\r\n                              <span>Humidity:</span>{\" \"}\r\n                              {today_weather[0].main.humidity}%\r\n                            </p>\r\n                            <p>\r\n                              <span>wind speed:</span>{\" \"}\r\n                              {today_weather[0].wind.speed}meter/sec\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"weekly_weather_forecast\">\r\n                      <ul>\r\n                        {today_weather.map((weather, index) => {\r\n                          return <Weekly key={index} value={weather} />;\r\n                        })}\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"extended_forecast\">\r\n                      <div className=\"extended_forecast_heading\">\r\n                        EXTENDED FORECAST\r\n                      </div>\r\n                      <div className=\"extended_forecast_grid\">\r\n                        <Weather />\r\n                        <Cloud />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Body;\r\n","import React from \"react\";\nimport Header from \"./components/layout/Header\";\nimport Footer from \"./components/layout/Footer\";\nimport Body from \"./components/weather/Body\";\nimport { Provider } from \"./context\";\nimport \"./App.css\";\nfunction App() {\n  return (\n    <Provider>\n      <div>\n        <Header brand=\"weatherJS\" />\n        <div className=\"wrapper\">\n          <Body />\n        </div>\n        <Footer />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}